//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace SRFROWCA
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class rowcaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new rowcaEntities object using the connection string found in the 'rowcaEntities' section of the application configuration file.
        /// </summary>
        public rowcaEntities() : base("name=rowcaEntities", "rowcaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new rowcaEntities object.
        /// </summary>
        public rowcaEntities(string connectionString) : base(connectionString, "rowcaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new rowcaEntities object.
        /// </summary>
        public rowcaEntities(EntityConnection connection) : base(connection, "rowcaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
        private ObjectSet<Organization> _Organizations;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizations(Organization organization)
        {
            base.AddObject("Organizations", organization);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="rowcaModel", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="organizationId">Initial value of the OrganizationId property.</param>
        /// <param name="organizationTypeId">Initial value of the OrganizationTypeId property.</param>
        /// <param name="organizationName">Initial value of the OrganizationName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Organization CreateOrganization(global::System.Int32 organizationId, global::System.Int32 organizationTypeId, global::System.String organizationName, global::System.Boolean isActive, global::System.DateTime createdDate)
        {
            Organization organization = new Organization();
            organization.OrganizationId = organizationId;
            organization.OrganizationTypeId = organizationTypeId;
            organization.OrganizationName = organizationName;
            organization.IsActive = isActive;
            organization.CreatedDate = createdDate;
            return organization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationId
        {
            get
            {
                return _OrganizationId;
            }
            set
            {
                if (_OrganizationId != value)
                {
                    OnOrganizationIdChanging(value);
                    ReportPropertyChanging("OrganizationId");
                    _OrganizationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrganizationId");
                    OnOrganizationIdChanged();
                }
            }
        }
        private global::System.Int32 _OrganizationId;
        partial void OnOrganizationIdChanging(global::System.Int32 value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationTypeId
        {
            get
            {
                return _OrganizationTypeId;
            }
            set
            {
                OnOrganizationTypeIdChanging(value);
                ReportPropertyChanging("OrganizationTypeId");
                _OrganizationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationTypeId");
                OnOrganizationTypeIdChanged();
            }
        }
        private global::System.Int32 _OrganizationTypeId;
        partial void OnOrganizationTypeIdChanging(global::System.Int32 value);
        partial void OnOrganizationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationName
        {
            get
            {
                return _OrganizationName;
            }
            set
            {
                OnOrganizationNameChanging(value);
                ReportPropertyChanging("OrganizationName");
                _OrganizationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrganizationName");
                OnOrganizationNameChanged();
            }
        }
        private global::System.String _OrganizationName;
        partial void OnOrganizationNameChanging(global::System.String value);
        partial void OnOrganizationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationAcronym
        {
            get
            {
                return _OrganizationAcronym;
            }
            set
            {
                OnOrganizationAcronymChanging(value);
                ReportPropertyChanging("OrganizationAcronym");
                _OrganizationAcronym = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrganizationAcronym");
                OnOrganizationAcronymChanged();
            }
        }
        private global::System.String _OrganizationAcronym;
        partial void OnOrganizationAcronymChanging(global::System.String value);
        partial void OnOrganizationAcronymChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CreatedById
        {
            get
            {
                return _CreatedById;
            }
            set
            {
                OnCreatedByIdChanging(value);
                ReportPropertyChanging("CreatedById");
                _CreatedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedById");
                OnCreatedByIdChanged();
            }
        }
        private Nullable<global::System.Guid> _CreatedById;
        partial void OnCreatedByIdChanging(Nullable<global::System.Guid> value);
        partial void OnCreatedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UpdatedById
        {
            get
            {
                return _UpdatedById;
            }
            set
            {
                OnUpdatedByIdChanging(value);
                ReportPropertyChanging("UpdatedById");
                _UpdatedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedById");
                OnUpdatedByIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UpdatedById;
        partial void OnUpdatedByIdChanging(Nullable<global::System.Guid> value);
        partial void OnUpdatedByIdChanged();

        #endregion
    
    }

    #endregion
    
}
